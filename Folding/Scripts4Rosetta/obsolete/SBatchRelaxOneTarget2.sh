#!/bin/sh

if [ $# -lt 4 ]; then
	echo $0 SeqFile initModelFolder predictedPairInfo predictedPropertyInfo [savefolder] 
	echo "	This script generates Rosetta constraints from predicted inter-residue relationship and PhiPsi angles and then relax 3D models"
	echo "	SeqFile: the primary sequence file in FASTA format"
	echo "	initModelFolder: folder for initial models"
	echo "	predictedPairInfo: a PKL file for all predicted inter-residue information including distance and orientation"
	echo "	predictedPropertyInfo: a PKL file for predicted Phi Psi angles. If this entry is cst, predictedPairInfo shall be a Rosetta constraint file generated by GenRosettaPotential.sh"
	echo "	savefolder: the folder for result saving, default current work directory"
	exit 1
fi

if [[ -z "${DistanceFoldingHome}" ]]; then
        echo "ERROR: Please set the environmental variable DistanceFoldingHome to the installation folder of Folding"
        exit 1
fi

seqFile=$1
if [ ! -f $seqFile ]; then
	echo "ERROR: invalid sequence file $seqFile"
	exit 1
fi

initModelFolder=$2
if [ ! -d $initModelFolder ]; then
	echo "ERROR: invalid folder for initial models $initModelFolder"
	exit 1
fi

pairMatrixFile=$3
if [ ! -f $pairMatrixFile ]; then
	echo "ERROR: the file for predicted distance/orientation info does not exist: $pairMatrixFile"
	exit 1
fi

propertyFile=$4
if [ "$propertyFile" != "cst" ]; then
	if [ ! -f $propertyFile ]; then
		echo "ERROR: the file for predicted property info does not exist: $propertyFile"
		exit 1
	fi
fi

savefolder=`pwd`
if [ $# -ge 5 ]; then
	savefolder=$5
	mkdir -p $savefolder
fi

program=${DistanceFoldingHome}/Scripts4Rosetta/GenPotentialNRelax2.sh
if [ ! -x $program ]; then
	echo "ERROR: invalid program for relaxation $program"
	exit 1
fi

seqLen=`tail -1 $seqFile | wc -c`
QUEUE=contrib-cpu
if [ $seqLen -ge 280 ]; then
	QUEUE=contrib-cpu-long
fi
echo $QUEUE

for model in $initModelFolder/*.pdb
do
	bname=`basename $model .pdb`
	#echo "sbatch -p $QUEUE -J ${bname}R -o $bname.out -e $bname.out -C avx $program $model $pairMatrixFile $propertyFile $savefolder"
	sbatch -p $QUEUE -J ${bname}R -o $bname.out -e $bname.out -C avx $program $model $pairMatrixFile $propertyFile $savefolder
done
